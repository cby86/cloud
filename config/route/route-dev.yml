route:
    returnFailRoutePath: true
spring:
  resources:
    add-mappings: true #开放资源映射
  security:
    dynamic_url:
      authentication:
        enabled: true
  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    lettuce:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)
        max-idle: 8   # 连接池中的最大空闲连接 ，默认值也是8
        max-wait: 100 # # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
        min-idle: 2    # 连接池中的最小空闲连接 ，默认值也是0
      shutdown-timeout: 100ms
  cloud:
    gateway:
      default-filters:
         - name: Hystrix
           args:
             name : default
             fallbackUri: 'forward:/fallback'
         - name: SwaggerHeaderFilter
         - name: RequestRateLimiter
           args:
             redis-rate-limiter.replenishRate: 1000  # 令牌桶的容积
             redis-rate-limiter.burstCapacity: 1000  # 流速 每秒
             key-resolver: "#{@ipAddressKeyResolver}" #SPEL表达式去的对应的bean
      routes:
      - id: spring-resource
        uri: lb://spring-resource
        predicates:
        - Path=/spring-resource/**
        filters:
        - StripPrefix=1
      - id: spring-user
        uri: lb://spring-user
        predicates:
        - Path=/spring-user/**
        filters:
        - StripPrefix=1
        - name: Hystrix
          args:
            name: user-service
            fallbackUri: forward:/fallback
      - id: spring-auth-center
        uri: lb://spring-auth-center
        predicates:
        - Path=/auth/**
        filters:
        - StripPrefix=1
        - name: Hystrix
          args:
            name: auth-service
            fallbackUri: forward:/fallback
      - id: spring-backend-center
        uri: lb://spring-backend-center
        predicates:
        - Path=/backend/**
        filters:
        - StripPrefix=1
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            key-resolver: "#{@ipKeyResolver}"
        - name: Hystrix
          args:
            name: backend-service
            fallbackUri: forward:/fallback
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
            methods: GET
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
